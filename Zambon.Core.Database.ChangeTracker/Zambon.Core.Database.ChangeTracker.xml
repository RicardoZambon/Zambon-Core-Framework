<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zambon.Core.Database.ChangeTracker</name>
    </assembly>
    <members>
        <member name="T:Zambon.Core.Database.ChangeTracker.CoreChangeTracker">
            <summary>
            Custom change tracker used to track instance property changes of all objects before actually saving in database.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache,Zambon.Core.Database.ChangeTracker.Services.IUserKeyProvider,Zambon.Core.Database.ChangeTracker.Services.IFormKeyProvider)">
            <summary>
            Default constructor.
            </summary>
            <param name="cache">Service to access the distributed cache.</param>
            <param name="userKeyProvider">Custom service to access the instance key stored at user presentation layer.</param>
            <param name="formKeyProvider">Custom service to access the current form key stored at current request.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.IsTracking(Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey,System.Boolean)">
            <summary>
            Checks if the change tracker is already tracking the object instance.
            </summary>
            <param name="instanceKey">The unique object instance key.</param>
            <param name="checkTemp">By default will only check object with already applied values.</param>
            <returns>Return true or false if the entity is being tracked.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.IsTracking(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object[],System.Boolean)">
            <summary>
            Checks if the change tracker is already tracking the object instance.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The type of the entity.</param>
            <param name="keyValues">Array of key values.</param>
            <param name="checkTemp">By default will only check object with already applied values.</param>
            <returns>Return true or false if the entity is being tracked.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.GetTrackedEntities``1(Microsoft.EntityFrameworkCore.DbContext,System.Boolean)">
            <summary>
            Load and return all objects of a specific entity type being currently tracked.
            </summary>
            <typeparam name="T">The type of the entity type.</typeparam>
            <param name="dbContext">The database instance context.</param>
            <param name="formKey">The parent form key, used to separate same user and different opened pages/forms.</param>
            <param name="readTemp">Should read and load objects from temp store.</param>
            <returns>Return an IQueryable list of the objects.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.AddOrUpdate``1(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{``0},System.Boolean)">
            <summary>
            Add or update an object into the ChangeTracker.
            </summary>
            <typeparam name="T">Must be an ITrackableEntity</typeparam>
            <param name="entry">The object instance.</param>
            <param name="saveToTemp">Should save in temporary edited objects or already applied changes.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Boolean)">
            <summary>
            Removes an object from ChangeTracker
            </summary>
            <param name="entry">The object instance.</param>
            <param name="onlyFromTemp">Removes only from temp store or from both.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.Remove(Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey,System.Boolean)">
            <summary>
            Removes an object from ChangeTracker
            </summary>
            <param name="instanceKey">The object key.</param>
            <param name="onlyFromTemp">Removes only from temp store or from both.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CoreChangeTracker.Clear(System.Boolean,System.Boolean,System.String)">
            <summary>
            Clears the stored entities in distributed cache.
            </summary>
            <param name="clearStored">If should clear the stored entities with changes already applied.</param>
            <param name="clearTemp">If should clear the temp stored entities.</param>
            <param name="tempEntityNameFilter">Filters the temp model to clean only this same type.</param>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension">
            <summary>
            Extension methods used by DbContext.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetEntityType(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>
            Search for the model entity type of the entity instance.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entity">The object instance to get the entity type.</param>
            <returns>Returns the entity type, null if no entity type was found.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetEntityType(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
            Search for the model entity type of the type.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The actual type to get the entity type.</param>
            <returns>Returns the entity type, null if no entity type was found.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeyProperties(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
            Returns all the keys properties for the entity.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The type of the entity.</param>
            <returns>Returns all the keys properties for the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeyNames(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
            Returns all the keys property names for the entity.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The type of the entity.</param>
            <returns>Returns all the keys property names for the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeyValues(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>
            Returns all the key values for the entity.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entity">The entity instance to get the key values.</param>
            <returns>Returns all the key values for the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.IsNewEntry``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>
            Checks if the entry already exists in database.
            </summary>
            <typeparam name="T">The type of the entity.</typeparam>
            <param name="dbContext">The database context instance.</param>
            <param name="entity">The object instance to check.</param>
            <returns>Returns true if the entry does not exists yet in database.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.LoadProperties``1(Microsoft.EntityFrameworkCore.DbContext,System.Object[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Load the properties dictionary merging with the database values.
            </summary>
            <typeparam name="TEntity">The type of the database entity.</typeparam>
            <param name="dbContext">The database context instance.</param>
            <param name="keys">Array with the key properties values.</param>
            <param name="propertyValues">A dictionary with the changed properties and their respective values.</param>
            <returns>Return the database object instance with the updated values.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension">
            <summary>
            Extension methods used in entity entries.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension.GetEntityType(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
            Returns the entity type for the entity entry.
            </summary>
            <param name="entry">The database entity entry instance from the context.</param>
            <returns>Returns database entity type.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension.GetKeyNames(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
            Get the primary key names from the entry instance.
            </summary>
            <param name="entry">The database entry instance from DB context.</param>
            <returns>Returns an collection of all key names.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension.GetKeyValues(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
            Get the primary key current values from the entry instance.
            </summary>
            <param name="entry">The database entry instance from DB context.</param>
            <returns>Returns an collection of all key values.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension">
            <summary>
            Extension methods to serialize and deserialize objects from array of bytes.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.DeserializeEntityInstanceKeys(System.Byte[])">
            <summary>
            Deserialize an array of stored entity instance keys.
            </summary>
            <param name="bytes">The bytes array to deserialize.</param>
            <returns>Returns an array of EntityInstanceKey.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.SerializeEntityInstanceKeys(Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey[])">
            <summary>
            Serialize an array of entity instance keys.
            </summary>
            <param name="keys">The EntityInstanceKey array to serialize.</param>
            <returns>Returns an array of bytes.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.DeserializeEntityInstanceObject(System.Byte[])">
            <summary>
            Deserialize a dictionary of the object changed properties.
            </summary>
            <param name="bytes">The bytes array to deserialize.</param>
            <returns>Returns a dictionary of string (property name) and object (value).</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.SerializeEntityInstanceObject(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Serialize a dictionary of the object changed properties.
            </summary>
            <param name="dictionary">The dictionary to serialize.</param>
            <returns>Returns an array of bytes.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Interfaces.ITrackableEntity">
            <summary>
            Represents database tracking classes.
            </summary>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey">
            <summary>
            Represents the key to track each object instance saved in change tracker.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.EntityName">
            <summary>
            The name of the entity type stored.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.EntityKeys">
            <summary>
            The database keys to unique identify the current object.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
            Default constructor.
            </summary>
            <param name="entry">The object instance.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object[])">
            <summary>
            Default constructor.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The type of the entity.</param>
            <param name="keys">Array of key values.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.GetHashCode">
            <summary>
            Returns the hash code for this string.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified System.Guid object represent the same value.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if g is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.EntityInstanceKey.ToString">
            <summary>
            Returns a string representation of the value of this instance in registry format.
            </summary>
            <returns>The value of this System.Guid plus the current user ID, formatted by using the format specifier as follows: xxxx_####.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Keys.UserKey">
            <summary>
            The change tracker key used to access stored objects in database cache.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.Keys.UserKey.DatabaseKey">
            <summary>
            The user access key, should be unique to each user.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.Keys.UserKey.CurrentUserId">
            <summary>
            Current user ID.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.UserKey.#ctor(System.Guid,System.Int32)">
            <summary>
            Default constructor.
            </summary>
            <param name="databaseKey">The user access key, should be unique to each user.</param>
            <param name="currentUserId">Current user ID.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.UserKey.GetHashCode">
            <summary>
            Returns the hash code for this change tracker key.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.UserKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified System.Guid object represent the same value.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if g is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Keys.UserKey.ToString">
            <summary>
            Returns a string representation of the value of this instance in registry format.
            </summary>
            <returns>The value of this System.Guid plus the current user ID, formatted by using the format specifier as follows: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_####.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Services.IUserKeyProvider">
            <summary>
            Service used to store and retrieve the database key under current session.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Services.IUserKeyProvider.StoreKey(System.Guid)">
            <summary>
            Stores the key in user current session.
            </summary>
            <param name="databaseKey">Unique key to the user.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Services.IUserKeyProvider.RetrieveKey">
            <summary>
            Retrieves the current change tracker key.
            </summary>
            <returns>Returns an object of type InstanceKey.</returns>
        </member>
    </members>
</doc>
