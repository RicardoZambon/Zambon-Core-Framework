<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zambon.Core.Database.ChangeTracker</name>
    </assembly>
    <members>
        <member name="T:Zambon.Core.Database.ChangeTracker.DI.CacheInjection">
            <summary>
            Dependency injection methods to configure the change tracker database cache.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.DI.CacheInjection.AddChangeTrackerDbCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions})">
            <summary>
            Extension method to configure the change tracker database cache.
            </summary>
            <param name="services">The Microsoft.Extensions.DependencyInjection.IServiceCollection to add services to.</param>
            <param name="options">An System.Action`1 to configure the provided Microsoft.Extensions.Caching.SqlServer.SqlServerCacheOptions.</param>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.DI.ServicesInjection">
            <summary>
            Dependency injection methods to configure the change tracker general services.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.DI.ServicesInjection.AddChangeTrackerServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extension method to configure the change tracker general services.
            </summary>
            <typeparam name="TCacheKeyService">The object type descendant from IInstanceKeyService to use.</typeparam>
            <param name="services">The Microsoft.Extensions.DependencyInjection.IServiceCollection to add services to.</param>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension">
            <summary>
            Extension methods used by DbContext.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeyProperties(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
            Returns all the keys properties for the entity.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The entity type mapped in database.</param>
            <returns>Returns all the keys properties for the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeys``1(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Returns all the keys properties for the entity.
            </summary>
            <typeparam name="T">The entity type mapped in database.</typeparam>
            <param name="dbContext">The database context instance.</param>
            <returns>Returns all the keys properties for the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeyValues(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>
            Get an array of the object key values.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="erntity">The database object instance.</param>
            <returns>Returns an array of the object key values.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.GetKeyValues``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>
            Get an array of the object key values.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entity">The database object instance.</param>
            <returns>Returns an array of the object key values.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.IsNewEntry``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>
            Checks if the entry already exists in database.
            </summary>
            <typeparam name="T">The type of the entity.</typeparam>
            <param name="dbContext">The database context instance.</param>
            <param name="entity">The object instance to check.</param>
            <returns>Returns true if the entry does not exists yet in database.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.IsNewEntry(Microsoft.EntityFrameworkCore.DbContext,System.Object)">
            <summary>
            Checks if the entry already exists in database.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entity">The object instance to check.</param>
            <returns>Returns true if the entry does not exists yet in database.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.LoadProperties(Microsoft.EntityFrameworkCore.DbContext,System.String,System.Object[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Load the properties dictionary merging with the database values.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="modelType">The model type of the database entity.</param>
            <param name="keys">Array with the key properties values.</param>
            <param name="propertyValues">A dictionary with the changed properties and their respective values.</param>
            <returns>Return the database object instance with the updated values.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.DbContextExtension.LoadProperties``1(Microsoft.EntityFrameworkCore.DbContext,System.Object[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Load the properties dictionary merging with the database values.
            </summary>
            <typeparam name="TEntity">The type of the database entity.</typeparam>
            <param name="dbContext">The database context instance.</param>
            <param name="keys">Array with the key properties values.</param>
            <param name="propertyValues">A dictionary with the changed properties and their respective values.</param>
            <returns>Return the database object instance with the updated values.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension">
            <summary>
            Extension methods used in entity entries.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension.GetKeys(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
            Returns all the keys properties for the entity.
            </summary>
            <param name="entry">The database entity entry instance from context.</param>
            <returns>Returns all the keys properties for the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.EntityEntryExtension.GetKeyValues(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
            Get an array of the object key values.
            </summary>
            <param name="entry">The database entity entry instance from context.</param>
            <returns>Returns an array of the object key values.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.ProxyExtension">
            <summary>
            Helper methods to use when having Castle.Proxies entities.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.ProxyExtension.GetUnproxiedType(System.Object)">
            <summary>
            Get the object type without the proxy.
            </summary>
            <param name="entity">The entity instance.</param>
            <returns>Returns the original type of the entity.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.ProxyExtension.GetUnproxiedType(System.Type)">
            <summary>
            Get the object type without the proxy.
            </summary>
            <param name="type">The object type.</param>
            <returns>Returns the original type.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension">
            <summary>
            Extension methods to serialize and deserialize objects from array of bytes.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.DeserializeStoreKeys(System.Byte[])">
            <summary>
            Deserialize an array of stored entity instance keys.
            </summary>
            <param name="bytes">The bytes array to deserialize.</param>
            <returns>Returns an array of EntityInstanceKey.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.SerializeStoreKeys(Zambon.Core.Database.ChangeTracker.StoredInstanceKey[])">
            <summary>
            Serialize an array of entity instance keys.
            </summary>
            <param name="keys">The EntityInstanceKey array to serialize.</param>
            <returns>Returns an array of bytes.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.DeserializeStoredObject(System.Byte[])">
            <summary>
            Deserialize a dictionary of the object changed properties.
            </summary>
            <param name="bytes">The bytes array to deserialize.</param>
            <returns>Returns a dictionary of string (property name) and object (value).</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Extensions.SerializationExtension.SerializeStoredObject(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Serialize a dictionary of the object changed properties.
            </summary>
            <param name="dictionary">The dictionary to serialize.</param>
            <returns>Returns an array of bytes.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Interfaces.ITrackableEntity">
            <summary>
            Represents database tracking classes.
            </summary>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.CacheKey">
            <summary>
            Represent the user key used to access the stored objects in database change tracker cache.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.CacheKey.DatabaseKey">
            <summary>
            Guid unique to each user.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.CacheKey.CurrentUserId">
            <summary>
            Current user ID.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.CacheKey.FormKey">
            <summary>
            The current form Key.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CacheKey.GetHashCode">
            <summary>
            Returns the hash code for this string.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CacheKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified System.Guid object represent the same value.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if g is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.CacheKey.ToString">
            <summary>
            Returns a string representation of the value of this instance in registry format.
            </summary>
            <returns>The value of this System.Guid plus the current user ID, formatted by using the format specifier as follows: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_####.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.StoredInstanceKey">
            <summary>
            Represents the key for each object save in custom ChangeTracker.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.ModelType">
            <summary>
            The root model type of the entity as string.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.EntityType">
            <summary>
            The actual entity type as string.
            </summary>
        </member>
        <member name="P:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.EntityKeys">
            <summary>
            The ID of the entity as integer.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object[])">
            <summary>
            Default constructor.
            </summary>
            <param name="dbContext">The database context instance.</param>
            <param name="entityType">The type of the entity.</param>
            <param name="entityKeys">The keys of the entity.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,Zambon.Core.Database.ChangeTracker.ChangeTrackerActions)">
            <summary>
            Default constructor.
            </summary>
            <param name="entry">The object instance.</param>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.GetHashCode">
            <summary>
            Returns the hash code for this string.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified System.Guid object represent the same value.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if g is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.StoredInstanceKey.ToString">
            <summary>
            Returns a string representation of the value of this instance in registry format.
            </summary>
            <returns>The value of this System.Guid plus the current user ID, formatted by using the format specifier as follows: xxxx_####.</returns>
        </member>
        <member name="T:Zambon.Core.Database.ChangeTracker.Services.ICacheKeyService">
            <summary>
            Service used to store and retrieve the instance key in user's session.
            </summary>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Services.ICacheKeyService.RetrieveDatabaseKey">
            <summary>
            Retrieves the current user instance key.
            </summary>
            <returns>Returns an object of type InstanceKey.</returns>
        </member>
        <member name="M:Zambon.Core.Database.ChangeTracker.Services.ICacheKeyService.RetrieveFormKey">
            <summary>
            Retrieves the unique identifier for the current form. 
            </summary>
            <returns>Returns the Guid object, null if not found the form key.</returns>
        </member>
    </members>
</doc>
