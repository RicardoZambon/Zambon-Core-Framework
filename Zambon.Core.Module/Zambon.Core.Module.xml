<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zambon.Core.Module</name>
    </assembly>
    <members>
        <member name="T:Zambon.Core.Module.ApplicationConfigs">
            <summary>
            Represents the AppSettings.json file
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.Configs">
            <summary>
            List of all configs in "ApplicationConfigs" node with the key and value.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.Languages">
            <summary>
            List of languages in "Languages" already separated by ";". If no languages were informed will return null.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.EnvironmentTitle">
            <summary>
            The name of the current environment.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.HasEnvironmentTitle">
            <summary>
            Will return true if the EnvironmentTitle was informed.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.FileStorePath">
            <summary>
            The path where the files from the application should be stored.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.DefaultDomainName">
            <summary>
            The default domain name where the users with "LDAP" should be validated.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.ReportsURLServer">
            <summary>
            The URL of the report server, will be used in menu options of the type "Report".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.ApplicationConfigs.ReportsFolderBasePath">
            <summary>
            The folder base path of the reports in report server, will be used in menu options of the type "Report".
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.ApplicationConfigs.Set(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Populate the Configs property with the AppSettings.json file. Should only called when the application is starting.
            </summary>
            <param name="configs"></param>
        </member>
        <member name="T:Zambon.Core.Module.Enums">
            <summary>
            Enums used in Module.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Enums.AuthenticationType">
            <summary>
            Types the user can authenticate.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Enums.PermissionTypes">
            <summary>
            Types of permission.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.ExtensionMethods.EnumExtension">
            <summary>
            Extensions used in enums.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.ExtensionMethods.EnumExtension.GetEnumItems``1">
            <summary>
            Get a list of all enum values.
            </summary>
            <typeparam name="T">The type of the enum.</typeparam>
            <returns>Return a dictionary with the enum number and its display name.</returns>
        </member>
        <member name="M:Zambon.Core.Module.ExtensionMethods.EnumExtension.GetEnumDisplayName(System.Enum)">
            <summary>
            Get the display name of a enum value.
            </summary>
            <param name="value">The enum item.</param>
            <returns>Return the enum display name from DisplayName attribute.</returns>
        </member>
        <member name="T:Zambon.Core.Module.ExtensionMethods.LinqDynamicExtension">
            <summary>
            Extension methods used in Linq.Dynamic.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.ExtensionMethods.LinqDynamicExtension.Where``2(System.Linq.IQueryable{``0},Zambon.Core.Module.Services.ExpressionsService,``1)">
            <summary>
            
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TCriteria"></typeparam>
            <param name="source"></param>
            <param name="expressions"></param>
            <param name="objCriteria"></param>
            <returns></returns>
        </member>
        <member name="T:Zambon.Core.Module.ExtensionMethods.MergeExtension">
            <summary>
            Extension method used merging the XML files of the Applicaton Model.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.ExtensionMethods.MergeExtension.MergeObject``1(``0,``0)">
            <summary>
            Merges two objects that implements the interface IMergeable.
            </summary>
            <typeparam name="TObject">The type of the objects.</typeparam>
            <param name="target">The original value, that should have the properties overwriten.</param>
            <param name="source">The source value, containing only the changed values.</param>
            <returns>Returns the target value plus all changes made in source value.</returns>
        </member>
        <member name="M:Zambon.Core.Module.ExtensionMethods.MergeExtension.MergeArray``1(``0[],``0[])">
            <summary>
            Merges two arrays of objects that implements the interface IMergeable.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="target">The target array, that should have the items overwriten.</param>
            <param name="source">The source array, containing only the changed items.</param>
            <returns>Returns the target array plus all changes made in source array.</returns>
        </member>
        <member name="T:Zambon.Core.Module.ExtensionMethods.TypeExtension">
            <summary>
            Extension types used for Type.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.ExtensionMethods.TypeExtension.GetDefaultProperty(System.Type)">
            <summary>
            Retrieve the default property name from DefaultPropertyAttribute.
            </summary>
            <param name="type">The type to search for.</param>
            <returns>If found, will return the default property name; otherwise, return null.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.ICondition">
            <summary>
            Interfaced used by objects that can apply conditions.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.ICondition.Condition">
            <summary>
            The condition to search, can reference arguments by @0, @1, etc.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.ICondition.ConditionArguments">
            <summary>
            Arguments separated by ",".
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.ICriteria">
            <summary>
            Interfaced used by objects that can apply crterias.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.ICriteria.Criteria">
            <summary>
            The criteria apply, can reference arguments by @0, @1, etc.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.ICriteria.CriteriaArguments">
            <summary>
            Arguments separated by ",".
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IFormFile">
            <summary>
            Interfaced used to upload files.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IFormFile.ContentType">
            <summary>
            The content type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IFormFile.ContentDisposition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IFormFile.Headers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IFormFile.Length">
            <summary>
            Length of the tile.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IFormFile.Name">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IFormFile.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IFormFile.OpenReadStream">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IFormFile.CopyTo(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IFormFile.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IMergeable">
            <summary>
            Interface used by XML nodes that can merge with other files.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IRoles">
            <summary>
            Interfaced used by roles.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRoles.Name">
            <summary>
            The name of the role.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRoles.IsAdministrative">
            <summary>
            Indicates if the role is administrative (have access to all items).
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IRolesMenuAccesses">
            <summary>
            Interface used by menu access control.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesMenuAccesses.RoleId">
            <summary>
            The role this menu access belongs.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesMenuAccesses.MenuId">
            <summary>
            The ID of the menu should allow/deny the access.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesMenuAccesses.AllowAccess">
            <summary>
            Indicates if the users should have access (true) or not (false) to the menu ID.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IRolesPermissions">
            <summary>
            Interface used by roles permission control.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.RoleId">
            <summary>
            The role this permission access belongs.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.Entity">
            <summary>
            The entity the permission should affect.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.PermissionType">
            <summary>
            The type of the permission.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.CanNavigate">
            <summary>
            Indicates if the role will be able to navigate (menu).
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.CanRead">
            <summary>
            Indicates if the role will be able to read any record.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.CanWrite">
            <summary>
            Indicates if the role will be able to write (update/insert).
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.CanCreate">
            <summary>
            Indicates if the role will be able to create new records (insert).
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesPermissions.CanDelete">
            <summary>
            Indicates if the role will be able to delete any record.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IRolesUsers">
            <summary>
            Interface used to control the relation between roles and users.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesUsers.RoleId">
            <summary>
            The role ID.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IRolesUsers.UserId">
            <summary>
            The user ID.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IUsers">
            <summary>
            Interface used to map basic user properties.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.AuthenticationType">
            <summary>
            Controls how this user should be authenticated when accessing the system.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.FullName">
            <summary>
            The user complete name.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.Username">
            <summary>
            The username the user should user to logon.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.Password">
            <summary>
            The user password ecripted if the authentication method is 0 (UserPassword), otherwise can be null null.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.LogonAllowed">
            <summary>
            When false the user is not able to logon.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.Email">
            <summary>
            The user current email.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.SendEmail">
            <summary>
            Indication if the system should send emails or not.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.CreatedOn">
            <summary>
            Date/time when this user was created.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.LastActivityOn">
            <summary>
            Date/time indicating the last acitivity in the system.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsers.IsAdministrator">
            <summary>
            If this user is inserted in any IsAdministrative roles, will return true.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IUsers.UserHasAccessToType(System.String,System.Int32)">
            <summary>
            Checks if the user has the specific access to the type.
            </summary>
            <param name="typeFullName">The type to search.</param>
            <param name="_access">The access to check.</param>
            <returns>If the user has access will return true.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IUsers.UserHasAccessToMenuID(System.String,System.String)">
            <summary>
            Checks if the user has access to the menu item.
            </summary>
            <param name="_menuID">The menu ID.</param>
            <param name="_menuType">The menu type.</param>
            <returns>If the user has access will return true.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IUsers.RefreshCurrentUserData(Zambon.Core.Database.CoreDbContext)">
            <summary>
            Loads current user related data.
            </summary>
            <param name="ctx">The EF DBContext instance.</param>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IUsersManagers">
            <summary>
            Interface used to map user with managers and subordinates.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsersManagers.ManagerID">
            <summary>
            The user ID.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IUsersManagers.SubordinateID">
            <summary>
            The user ID.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IViewButtons">
            <summary>
            Interface used by Views that implement Buttons.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IViewButtons.Buttons">
            <summary>
            List all buttons.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IViewButtons._Buttons">
            <summary>
            The Buttons element from XML.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IViewControllerAction">
            <summary>
            Interface used by Views that implement Controller and Action.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IViewControllerAction.ControllerName">
            <summary>
            Define the default controller name to be used within this view, by default will use the same as set in EntityType.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IViewControllerAction.ActionName">
            <summary>
            Define the action name to be used for this view.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Interfaces.IViewSubViews">
            <summary>
            Interface used from Views that implement SubViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Interfaces.IViewSubViews.SubViews">
            <summary>
            The SubViews element from XML.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Interfaces.IViewSubViews.GetSubView(System.String)">
            <summary>
            Retrieves a SubView using the SubView Id.
            </summary>
            <param name="Id">The Id of the SubView.</param>
            <returns>If found, return the SubView instance; Otherwise, return null.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Services.ApplicationService">
            <summary>
            The main service used in application, is registered under Scoped lifecycle.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.AppConfigs">
            <summary>
            Returns the current instance of the AppSettings.json file.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.AppName">
            <summary>
            The name of the application, from ApplicationModel.xml <Application Name=""></Application>.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.AppMenuName">
            <summary>
            The name of the application used in menu (If null will use the application name), from ApplicationModel.xml <Application MenuName=""></Application>.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.AppFullName">
            <summary>
            The full name of the application used in home page, from ApplicationModel.xml <Application FullName=""></Application>.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.Version">
            <summary>
            The current version of the application, from the startup project Package > Package version.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.Copyright">
            <summary>
            The copyright of the application, from the startup project Package > Copyright.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.LoginTheme">
            <summary>
            The login theme used in Login page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.UserMenu">
            <summary>
            The user menu array, already filtered accordingly to the available options.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ApplicationService.CurrentUser">
            <summary>
            Current active user object from UserService.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.#ctor(Zambon.Core.Database.CoreDbContext,Zambon.Core.Module.Services.ILanguageService,Zambon.Core.Module.Services.ModelService,Zambon.Core.Module.Services.ExpressionsService,Zambon.Core.Module.Services.IUserService)">
            <summary>
            Default constructor for the ApplicationService.
            </summary>
            <param name="ctx">Database instance service.</param>
            <param name="languageService">Current language service.</param>
            <param name="modelService">ApplicationModel.xml service.</param>
            <param name="expressionsService">Expressions service.</param>
            <param name="userService">Current active user service.</param>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetExpressionsService">
            <summary>
            Returns the current used instance of the ExpressionsService.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetDefaultProperty(System.String)">
            <summary>
            Search for the default property from the entity type.
            </summary>
            <param name="clrType">The EntityType ClrType to search for.</param>
            <returns>Return the System.ComponentModel.DefaultProperty attribute value, string.Empty if not found any default property defined.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetPropertyDisplayName(System.String,System.String)">
            <summary>
            Search for the display name of a property from a entity type.
            </summary>
            <param name="clrType">The EntityType ClrType to search for.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>Return the System.ComponentModel.DataAnnotations.DisplayAttribute value, string.Empty if not found the display attribute.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetStaticText(System.String)">
            <summary>
            Search all Static Texts using the Key property.
            </summary>
            <param name="key">The static text key to search.</param>
            <returns>Return the Static Text value string, string.Empty if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetView(System.String)">
            <summary>
            Search DetailViews, ListViews and LookUpViews using the Id property.
            </summary>
            <param name="viewId">The id of the view to search.</param>
            <returns>Return the BaseView object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetDetailView(System.String)">
            <summary>
            Search all DetailViews using the Id property.
            </summary>
            <param name="detailViewId">The id of the view to search.</param>
            <returns>Return the DetailView object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetListView(System.String)">
            <summary>
            Search all ListViews using the Id property.
            </summary>
            <param name="listViewId">The id of the view to search.</param>
            <returns>Return the ListView object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ApplicationService.GetLookupView(System.String)">
            <summary>
            Search all LookUpViews using the Id property.
            </summary>
            <param name="lookUpViewId">The id of the view to search.</param>
            <returns>Return the LookUpView object, null if not found.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Services.ExpressionsService">
            <summary>
            Expression service used in custom criterias.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.#ctor(Zambon.Core.Module.Services.IUserService)">
            <summary>
            
            </summary>
            <param name="userService">The current user service based from IUserService.</param>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.GetReplacementValue(System.String)">
            <summary>
            Get the text for replacement values, if contains "CurrentUser" will return the current logged user, otherwise will return the text itself. 
            </summary>
            <param name="text">The text to search.</param>
            <returns>Returns the text or the IUserService.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.GetReplacementValue``1(System.String,``0)">
            <summary>
            Get the text for replacement values, if contains "CurrentUser" will return the current logged user, otherwise will return the property from the object.
            </summary>
            <typeparam name="T">The type of the object.</typeparam>
            <param name="text">The text to search.</param>
            <param name="obj">The object to get the property from.</param>
            <returns>Returns the property value or the IUserService.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.FormatArguments(System.String)">
            <summary>
            Searchs all criteria arguments for [] and will try to replace them for the IUserService.
            </summary>
            <param name="criteriaArguments">The criteria arguments.</param>
            <returns>Return an array of arguments.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.FormatArguments``1(System.String,``0)">
            <summary>
            earchs all criteria arguments for [] and will try to replace them for the IUserService or the object property.
            </summary>
            <typeparam name="T">The type of the object.</typeparam>
            <param name="criteriaArguments">The criteria arguments.</param>
            <param name="obj">The object to get the properties values from.</param>
            <returns>Return an array of arguments.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.IsConditionApplicable(System.String,System.Object)">
            <summary>
            Checks if the condition is applicable for the object.
            </summary>
            <param name="condition">The condition to check.</param>
            <param name="obj">The object, if null will use a new object().</param>
            <returns>Returns if the condition is applicable (true) or not (false).</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.IsConditionApplicable(Zambon.Core.Module.Interfaces.ICondition,System.Object)">
            <summary>
            Checks if the condition is applicable for the object.
            </summary>
            <param name="element">The condition to check.</param>
            <param name="obj">The object, if null will use a new object().</param>
            <returns>Returns if the condition is applicable (true) or not (false).</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.IsConditionApplicable``1(Zambon.Core.Module.Interfaces.ICondition,``0)">
            <summary>
            Checks if the condition is applicable for the object.
            </summary>
            <param name="element">The condition to check.</param>
            <param name="obj">The object.</param>
            <returns>Returns if the condition is applicable (true) or not (false).</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.IsConditionApplicable``1(System.String,``0)">
            <summary>
            Checks if the condition is applicable for the object.
            </summary>
            <param name="condition">The condition to check.</param>
            <param name="obj">The object.</param>
            <returns>Returns if the condition is applicable (true) or not (false).</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.FormatExpression(System.String,System.Object)">
            <summary>
            Format an expression replacing [] by the objects values.
            </summary>
            <param name="expression"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.FormatActionParameters(System.String,System.Object)">
            <summary>
            Format action parameters, replacing [] for the global value or the current object value.
            </summary>
            <param name="actionParameters">A string with all action paratemers.</param>
            <param name="obj">The object to search the properties from.</param>
            <returns>Return a dictionaty of parameters and respective values.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.GetApplicableItems``1(``0[],System.Object)">
            <summary>
            Get a list of applicable items for that condition.
            </summary>
            <typeparam name="TCondition">The condition type.</typeparam>
            <param name="conditions">The condition object.</param>
            <param name="obj">The object to search for.</param>
            <returns>Return a list of object where the condition is true.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Services.ExpressionsService.GetApplicableItems``2(``0[],``1)">
            <summary>
            Get a list of applicable items for that condition.
            </summary>
            <typeparam name="TCondition">The condition type.</typeparam>
            <typeparam name="TObject">The type of the object.</typeparam>
            <param name="expressions">The condition object.</param>
            <param name="obj">The object to search for.</param>
            <returns>Return a list of object where the condition is true.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Services.ILanguageService">
            <summary>
            Interface to implements in methods responsible to the current active language.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Services.ILanguageService.ChangeLanguage(System.String)">
            <summary>
            Change the language by specifying a new language.
            </summary>
            <param name="newLanguage">The code of the new language to display.</param>
        </member>
        <member name="M:Zambon.Core.Module.Services.ILanguageService.GetCurrentLanguage">
            <summary>
            Get the current active language.
            </summary>
            <returns>Returns the current active language code.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Services.IUserService">
            <summary>
            Interface to implements in methods responsible to the handle the current logged user.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.IUserService.CurrentIdentityName">
            <summary>
            The current identity logged.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.IUserService.CurrentUser">
            <summary>
            The object of the curent logged user.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Services.ModelService">
            <summary>
            Service used to deserialize the Application Model from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ModelService.AppVersion">
            <summary>
            The current version of the application, from the startup project Package > Package version.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Services.ModelService.AppCopyright">
            <summary>
            The copyright of the application, from the startup project Package > Copyright.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Services.ModelService.#ctor(Microsoft.Extensions.Options.IOptions{Zambon.Core.Module.ApplicationConfigs})">
            <summary>
            Default constructor for the ApplicationService.
            </summary>
            <param name="appConfigs">Instance of the AppSettings.json file.</param>
        </member>
        <member name="M:Zambon.Core.Module.Services.ModelService.GetModel(Zambon.Core.Database.CoreDbContext,System.String)">
            <summary>
            Get a cloned instance of the Application Model.
            </summary>
            <param name="ctx">The CoreDbContext instance.</param>
            <param name="language">The current language of the model, if null will return the default language.</param>
            <returns>Return a cloned instance of the Application Model</returns>
        </member>
        <member name="T:Zambon.Core.Module.Validations.RuleRequiredAttribute">
            <summary>
            Specifies that a data field value is required.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Validations.RuleRequiredAttribute.Condition">
            <summary>
            The condition when the validation should occurs.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Validations.RuleRequiredAttribute.ElementId">
            <summary>
            The ID of the element in the page separated by ",", if null will use the data field name.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleRequiredAttribute.#ctor">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleRequiredAttribute.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleRequiredAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleRequiredAttribute.
            </summary>
            <param name="errorMessage">The custom error message.</param>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleRequiredAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleRequiredAttribute.
            </summary>
            <param name="errorMessage">The custom error message.</param>
            <param name="Condition">The condition when the validation should occurs.</param>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleRequiredAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Checks that the value of the required data field is not empty.
            </summary>
            <param name="value">The data field value to validate.</param>
            <param name="validationContext">The context of the validation.</param>
            <returns>true if validation is successful; otherwise, false.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Validations.RuleUniqueValueAttribute">
            <summary>
            Specifies that a data field value can not be duplicated.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.Condition">
            <summary>
            The condition when the validation should occurs.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.IgnoreEmptyStrings">
            <summary>
            If should ignore when the field is empty.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.#ctor">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleUniqueValueAttribute.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleUniqueValueAttribute.
            </summary>
            <param name="errorMessage">The custom error message.</param>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleUniqueValueAttribute.
            </summary>
            <param name="errorMessage">The custom error message.</param>
            <param name="condition">The condition when the validation should occurs.</param>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the Zambon.Core.Module.Validations.RuleUniqueValueAttribute.
            </summary>
            <param name="errorMessage">The custom error message.</param>
            <param name="condition">The condition when the validation should occurs.</param>
            <param name="ignoreEmptyStrings">If should ignore when the field is empty.</param>
        </member>
        <member name="M:Zambon.Core.Module.Validations.RuleUniqueValueAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Checks that the value of the required data field is not duplicated in database.
            </summary>
            <param name="value">The data field value to validate.</param>
            <param name="validationContext">The context of the validation.</param>
            <returns>true if validation is successful; otherwise, false.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Application">
            <summary>
            Represents the root class from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.Name">
            <summary>
            Application name.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.FullName">
            <summary>
            Long name for application
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.MenuName">
            <summary>
            Name to display in menu, if empty will use the Name property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.EntityTypes">
            <summary>
            List all entities, later used to construct the menus and views.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.Languages">
            <summary>
            List all available languages, will use the languages listed to show the language selection box.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.StaticTexts">
            <summary>
            Static texts used across the application.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.ModuleConfiguration">
            <summary>
            Module default configuration.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.Navigation">
            <summary>
            List all menu items.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application.Views">
            <summary>
            List all views items.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application._EntityTypes">
            <summary>
            Element representation of the Xml <EntityTipes></EntityTipes> node.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application._Languages">
            <summary>
            Element representation of the Xml <Languages></Languages> node.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application._StaticTexts">
            <summary>
            Element representation of the Xml <StaticTexts></StaticTexts> node.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Application._Navigation">
            <summary>
            Element representation of the Xml <Navigation></Navigation> node.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.FindEntityById(System.String)">
            <summary>
            Search all entities using the Id.
            </summary>
            <param name="Id">The entity Id.</param>
            <returns>Return the Entity object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.FindEntityByClrType(System.String)">
            <summary>
            Search all entities using the CLR Type.
            </summary>
            <param name="typeClr">The entity CLR Type.</param>
            <returns>Return the Entity object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.FindLanguage(System.String)">
            <summary>
            Search all languages using the Code property.
            </summary>
            <param name="languageCode">The language code to search.</param>
            <returns>Return the Language object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.GetStaticText(System.String)">
            <summary>
            Search all Static Texts using the Key property.
            </summary>
            <param name="key">The static text key to search.</param>
            <returns>Return the Static Text value string, string.Empty if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.FindDetailView(System.String)">
            <summary>
            Search all DetailViews using the Id property.
            </summary>
            <param name="viewId">The id of the view to search.</param>
            <returns>Return the DetailView object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.FindListView(System.String)">
            <summary>
            Search all ListViews using the Id property.
            </summary>
            <param name="viewId">The id of the view to search.</param>
            <returns>Return the ListView object, null if not found.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Application.FindLookupView(System.String)">
            <summary>
            Search all LookUpViews using the Id property.
            </summary>
            <param name="viewId">The id of the view to search.</param>
            <returns>Return the LookUpView object, null if not found.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Configuration.DetailViewDefaults">
            <summary>
            Represents a node <DetailViewDefaults /> from XML Application Model. Define default values for all DetailViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.DetailViewDefaults.DefaultAction">
            <summary>
            The DefaultAction attribute from XML. The default action name the DetailView should post when submitting the form.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.DetailViewDefaults.DefaultView">
            <summary>
            The DefaultView attribute from XML. The default name of the .cshtml file.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Configuration.ListViewDefaults">
            <summary>
            Represents a node <ListViewDefaults /> from XML Application Model. Define default values for all ListViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.BoolCanEdit">
            <summary>
            The CanEdit attribute from XML. Indicates if the list views should be editable or not.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.CanEdit">
            <summary>
            The CanEdit attribute from XML. Indicates if the list views should be editable or not.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.DefaultAction">
            <summary>
            The DefaultAction attribute from XML. The default action should be used when editing ListViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.DefaultEditModalParameter">
            <summary>
            The DefaultEditModalParameter attribute from XML. The default paramters should be passed to the modal when editing ListViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.BoolShowPagination">
            <summary>
            The ShowPagination attribute from XML. Indicates if should display or not a pagiation.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.ShowPagination">
            <summary>
            The ShowPagination attribute from XML. Indicates if should display or not a pagiation.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.IntPageSize">
            <summary>
            The PageSize attribute from XML. The maximum number of records to display in a same page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.PageSize">
            <summary>
            The PageSize attribute from XML. The maximum number of records to display in a same page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.IntPagesToShow">
            <summary>
            The PagesToShow attribute from XML. The maximum number of pages to show in footer.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ListViewDefaults.PagesToShow">
            <summary>
            The PagesToShow attribute from XML. The maximum number of pages to show in footer.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Configuration.LoginDefaults">
            <summary>
            Represents a node <LoginDefaults /> from XML Application Model. Define default values for login page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.LoginDefaults.Theme">
            <summary>
            
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Configuration.ModuleConfiguration">
            <summary>
            Represents a node <ModuleConfiguration></ModuleConfiguration> from XML Application Model. Define default values for all application.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ModuleConfiguration.LoginDefaults">
            <summary>
            Represents an element <LoginDefaults /> from XML Application Model. Define default values for login page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ModuleConfiguration.DetailViewDefaults">
            <summary>
            Represents an element <DetailViewDefaults /> from XML Application Model. Define default values for all DetailViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Configuration.ModuleConfiguration.ListViewDefaults">
            <summary>
            Represents an element <ListViewDefaults /> from XML Application Model. Define default values for all ListViews.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.EntityTypes.Entity">
            <summary>
            Represents entities used in CoreDbContext. IEntity or IQuery.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.Id">
            <summary>
            The Id of the entity type, used to merge same elements across ApplicationModels.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.DisplayName">
            <summary>
            Display name of the entity type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.Icon">
            <summary>
            Icon of the entity type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.DefaultController">
            <summary>
            Default controller name.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.FromSql">
            <summary>
            If this entity should be returned directly from the database.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.TypeClr">
            <summary>
            The CLR type of the entity type, with the full type name.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.Properties">
            <summary>
            Properties from the entity type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity._Properties">
            <summary>
            Properties from the entity type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.EntityType">
            <summary>
            The entity type from Entity Framework.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Entity.Navigations">
            <summary>
            Navigations from the entity type (ICollections, IList, etc.).
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.EntityTypes.Entity.GetDefaultProperty">
            <summary>
            Returns the default property set in DefaultPropertyAttribute. string.Empty if no property were informed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.EntityTypes.Entity.GetPropertyDisplayName(System.String)">
            <summary>
            Get the display name of a property.
            </summary>
            <param name="property">The name of the property.</param>
            <returns>Returns the display name in ApplicationModel, if not found any, from the DisplayAttribut, if not found, will return the property.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.EntityTypes.Entity.GetEntityType">
            <summary>
            Get the CLR type object from the entity type.
            </summary>
            <returns>Returns the type object.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.EntityTypes.EntityTypesArray">
            <summary>
            Represents a list of entity types used in CoreDbContext. IEntity or IQuery.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.EntityTypesArray.Entities">
            <summary>
            List of all entity types.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.EntityTypes.Properties">
            <summary>
            Represents a node <Properties></Properties> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Properties.Property">
            <summary>
            Represent elements <Property /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.EntityTypes.Property">
            <summary>
            Represents a node <Property /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Property.Name">
            <summary>
            The Name attribute from XML. The name of the property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.EntityTypes.Property.DisplayName">
            <summary>
            The DisplayName attribute from XML. The display name should be used in application, by default will use the DisplayName attribute.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Languages.Language">
            <summary>
            Represents a node <Language /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Languages.Language.Code">
            <summary>
            The code of the language, the same from AppSettings.json file.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Languages.Language.FlagIcon">
            <summary>
            The icon should be used to display the language flag in languages list.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Languages.Language.DisplayName">
            <summary>
            The language display name should be displayed in languages list.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Languages.LanguagesArray">
            <summary>
            Represents a node <Languages></Languages> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Languages.LanguagesArray.Languages">
            <summary>
            List of <Language /> elements.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.MergeKeyAttribute">
            <summary>
            Indicates the attribute should be used when merging to detect same records in both files.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Navigation.Menu">
            <summary>
            Represents a node <Menu></Menu> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.Id">
            <summary>
            The Id attribute from XML. The ID of the menu item.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.DisplayName">
            <summary>
            The DisplayName attribute from XML. The display name of the menu item, if null and of type DetailView or ListView will use the title from the view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.Icon">
            <summary>
            The Icon attribute from XML. The icon of the menu item, if null and of type DetailView or ListView will use the icon from the view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.IntIndex">
            <summary>
            The Index attribute from XML. The index order of the menu item.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.Index">
            <summary>
            The Index attribute from XML. The index order of the menu item.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.Type">
            <summary>
            The Type attribute from XML. The type defines what the action the menu should execute when accessed.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.ViewID">
            <summary>
            The ViewID attribute from XML. The ViewID of the view the menu should show, when the type is DetailView or ListView.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.ControllerName">
            <summary>
            The ControllerName attribute from XML. The controller of the action the menu should execute when accessed, only used with DetailView type, by default will get the same controller from view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.ActionName">
            <summary>
            The ActionName attribute from XML. The action the menu should execute when accessed, only used with DetailView type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.ReportPath">
            <summary>
            The ReportPath attribute from XML. The path of the report the menu should open, only used with Report type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.URL">
            <summary>
            The URL attribute from XML. The URL the menu should open, only used with External type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.BoolShowBadge">
            <summary>
            The ShowBadge attribute from XML. Indicates if the menu should display the badge along with the name, only used with submenus or ListViews, indicating the number of records (count) are available.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.ShowBadge">
            <summary>
            The ShowBadge attribute from XML. Indicates if the menu should display the badge along with the name, only used with submenus or ListViews, indicating the number of records (count) are available.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.SubMenus">
            <summary>
            The submenus included in this menu. If the menu has submenus the menu Type is ignored.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.Menu.View">
            <summary>
            The view object from ViewID, when available.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Navigation.Menu.CompareTo(System.Object)">
            <summary>
            Compares the Index with other menu object, to sort the menus array.
            </summary>
            <param name="obj">The menu object to compare to.</param>
            <returns>A signed number indicating the relative values of this instance and value. Return
                Value Description Less than zero: This instance is less than value. Zero: This
                instance is equal to value. Greater than zero: This instance is greater than value.
            </returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Navigation.Menu.UserHasAccess(Zambon.Core.Module.Interfaces.IUsers)">
            <summary>
            Checks if the informed user has access to this menu item.
            </summary>
            <param name="user">The user to check the access.</param>
            <returns>If the user has access returns true.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Navigation.NavigationArray">
            <summary>
            Represents a node <Navigation></Navigation> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Navigation.NavigationArray.Menus">
            <summary>
            Represents elements <Menu></Menu> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.StaticTexts.StaticText">
            <summary>
            Represents a node <StaticText /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.StaticTexts.StaticText.Key">
            <summary>
            The Key attribute from XML. The static text key should be used when displaying across the application.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.StaticTexts.StaticText.Value">
            <summary>
            The Value attribute from XML. The static text value.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.StaticTexts.StaticTextsArray">
            <summary>
            Represents a node <StaticTexts></StaticTexts> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.StaticTexts.StaticTextsArray.Texts">
            <summary>
            Represent elements <StaticText /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.BaseView">
            <summary>
            Base view class used for all Views.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseView.ViewId">
            <summary>
            The ViewId, used to merge same elements across ApplicationModels.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseView.Title">
            <summary>
            The view title, if leave blank will use the DisplayName from the EntityType informed in Type property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseView.Icon">
            <summary>
            The view icon, if leave blank will use the Icon from the EntityType informed in Type property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseView.Type">
            <summary>
            The type type, must exist in EntityTypes list.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseView.Entity">
            <summary>
            The Entity object from the Type property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseView.CurrentObject">
            <summary>
            The current active object being shown.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseView.GetEntityTypeName">
            <summary>
            Return the TypeCLR string from the entity type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseView.GetEntityType">
            <summary>
            Return the Type object from the entity type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseView.SetCurrentObject(System.Object)">
            <summary>
            Set the current object.
            </summary>
            <param name="currentObject">Current object. being show in page.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseView.ClearCurrentObject">
            <summary>
            Clears the current object.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.Buttons.Button">
            <summary>
            Represents buttons used in DetailViews or ListViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Id">
            <summary>
            The button Id, used to merge same elements across ApplicationModels.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Icon">
            <summary>
            The icon should be shows along with the button.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.DisplayName">
            <summary>
            The display name should show with the button (Inline buttons does not use DisplayName). The display name is also used to set the Title html property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.CssClass">
            <summary>
            Custom CSS class to use with the button.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.IntIndex">
            <summary>
            The index value returned from Xml file.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Index">
            <summary>
            The button index order to display.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Target">
            <summary>
            The target container of the button, where the button should be shown (Toolbar, Inline, ModalFooter, Custom...). Can have more than one container separated by ",".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ControllerName">
            <summary>
            The controller name of the button, if no controller is informed will use the controller from the View where is inserted.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ActionName">
            <summary>
            The action name this button should execute when clicked.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ActionParameters">
            <summary>
            List of custom parameters to pass to the action, is possible to use object properties with [ ], ex: id=[ID].
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ActionMethod">
            <summary>
            The action method the button should execute, by default is POST.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.BoolUseFormPost">
            <summary>
            If the button should use the form post from DetailView, passing the entire object to the server. Defaut false.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.UseFormPost">
            <summary>
            If the button should use the form post from DetailView, passing the entire object to the server. Defaut false.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.LoadingContainer">
            <summary>
            Name of the loading container this button should use, default blank and will use the same from the form.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ConfirmMessage">
            <summary>
            If this button should show a confirmation message before submitting.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Condition">
            <summary>
            Condition to show this button.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ConditionArguments">
            <summary>
            Arguments pass to the condition separated by ",".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.OpenModal">
            <summary>
            The modal id in SubViews > SubModal > Id this button should open when clicked.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.ModalTitle">
            <summary>
            Override the modal Title property set in the modal itself and in the SubDetailView.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.SubButtons">
            <summary>
            Sub buttons list. Only used in Toolbar buttons.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button._SubButtons">
            <summary>
            Sub buttons list. Only used in Toolbar buttons.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Targets">
            <summary>
            List of targets set in Target property separated by ",".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Button.Modal">
            <summary>
            The modal object this button should open. Null if is not opening any modal.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.Buttons.Button.CompareTo(System.Object)">
            <summary>
            Compares the Index with other button, to sort the buttons array.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.Buttons.Button.IsApplicable(System.String)">
            <summary>
            Checks if the button is application to the target.
            </summary>
            <param name="target">The target container to check.</param>
            <returns>Returns true if the button is applicable.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.Buttons.Button.IsApplicable(Zambon.Core.Module.Services.ExpressionsService,System.String,System.Object)">
            <summary>
            Checks if the button is application to the target and with the current object.
            </summary>
            <param name="service">Expressions service to compare the object with the condition property.</param>
            <param name="target">The target container to check.</param>
            <param name="obj">The object instance to compare the Criteria property.</param>
            <returns></returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.Buttons.Buttons">
            <summary>
            Represents a list of buttons used in DetailViews or ListViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Buttons.Buttons.Button">
            <summary>
            List of all buttons.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.DetailViews.DetailView">
            <summary>
            Represents views showing detailed data.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.ControllerName">
            <summary>
            The ControllerName attribute from XML. Define the default controller name to be used within this view, by default will use the same as set in EntityType.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.ActionName">
            <summary>
            The ActionName attribute from XML. Define the action name to be used for this view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.ViewType">
            <summary>
            The type of the view, if set to Single will only show the first element from the database. Default is empty.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.FormEnctype">
            <summary>
            Enctype should be used from the <form></form> html element. Default is empty.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.DefaultView">
            <summary>
            Override the view .cshtml default name from DetailViewConfiguration node.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.ViewFolder">
            <summary>
            If Views folder is organized in three levels, should use this property. {ViewFolder}\ControllerName\ViewName.cshtml
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.Buttons">
            <summary>
            List all buttons.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.Scripts">
            <summary>
            List of all scripts in this detail view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.SubViews">
            <summary>
            The SubViews element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView._Buttons">
            <summary>
            The Buttons element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView._Scripts">
            <summary>
            List of all scripts in this detail view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.CurrentView">
            <summary>
            The current displayed view path. {ViewFolder}\ControllerName\ViewName.cshtml
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.ActivateInstance(Zambon.Core.Database.CoreDbContext)">
            <summary>
            Creates an instance of the EntityType object and set the CurrentObject property.
            </summary>
            <param name="ctx">The CoreDbContext database instance.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.ActivateInstance``1(Zambon.Core.Database.CoreDbContext)">
            <summary>
            Creates an instance of the EntityType object and set the CurrentObject property.
            </summary>
            <param name="ctx">The CoreDbContext database instance.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.SetCurrentView(System.String)">
            <summary>
            Set the current view.
            </summary>
            <param name="currentView"></param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.DetailViews.DetailView.GetSubView(System.String)">
            <summary>
            Retrieves a SubView using the SubView Id.
            </summary>
            <param name="Id">The Id of the SubView.</param>
            <returns>If found, return the SubView instance; Otherwise, return null.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.DetailViews.Scripts.Script">
            <summary>
            Represents a node <Script /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.Scripts.Script.Src">
            <summary>
            The Src attribute from XML. The source path to the .js script file.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.DetailViews.Scripts.ScriptsArray">
            <summary>
            Represents a node <Scripts></Scripts> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.DetailViews.Scripts.ScriptsArray.Script">
            <summary>
            Represent elements <Script /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column">
            <summary>
            Represents columns used in ListViews and LookUpViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.PropertyName">
            <summary>
            The property name this column should show, ex: "Name" or "Role.Name".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.DisplayName">
            <summary>
            The column header display name, by default will take from EntityType Property.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.IntIndex">
            <summary>
            The index value returned from Xml file.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.Index">
            <summary>
            The column index order to display.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.Size">
            <summary>
            The size of the column, by default will take the available space equally, input numbers from 1 to 12 or "fit" to set to the minimum width possible without truncating the text. The sum of all columns can not be greater than 12.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.FormatType">
            <summary>
            The format the value should be formated in string.Format pattern: {0:MM/dd/yyyy}.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.Alignment">
            <summary>
            The alignment of the cell, by default is "Left". Can set "Left", "Center" or "Right".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.IsNullValue">
            <summary>
            Value to show when the column value is null.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.CssClass">
            <summary>
            Custom CSS class to use with the cell.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.Columns.Column.CompareTo(System.Object)">
            <summary>
            Compares the Index with other column object, to sort the columns array.
            </summary>
            <param name="obj">The column object to compare to.</param>
            <returns>A signed number indicating the relative values of this instance and value. Return
                Value Description Less than zero: This instance is less than value. Zero: This
                instance is equal to value. Greater than zero: This instance is greater than value.
            </returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Columns.ColumnsArray">
            <summary>
            Represents a list of columns used in ListViews or LookUpViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Columns.ColumnsArray.Column">
            <summary>
            List of all columns.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.ListView">
            <summary>
            Represents a node <ListView></ListView> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.ControllerName">
            <summary>
            The ControllerName attribute from XML. Define the default controller name to be used within this view, by default will use the same as set in EntityType.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.ActionName">
            <summary>
            The ActionName attribute from XML. Define the action name to be used for this view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.BoolCanEdit">
            <summary>
            The CanEdit attribute from XML. Indicates if the list view should be editable or not.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.CanEdit">
            <summary>
            The CanEdit attribute from XML. Indicates if the list view should be editable or not.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.EditModalId">
            <summary>
            The EditModalId attribute from XML. ID of the ModalView should be used when editting records. By default will search for DetailViews with the same Type.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.MessageOnEmpty">
            <summary>
            The MessageOnEmpty attribute from XML. Message to show when no records are found.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.BoolShowPagination">
            <summary>
            The ShowPagination attribute from XML. Indicates if should display or not a pagiation.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.ShowPagination">
            <summary>
            The ShowPagination attribute from XML. Indicates if should display or not a pagiation.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.EditModalParameters">
            <summary>
            The EditModalParameters attribute from XML. Passes the modal parameters arguments when editing an object. By defualt will use object=[ID].
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.Buttons">
            <summary>
            List all buttons.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.PaintOptions">
            <summary>
            List all paint options and their conditions.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.SubViews">
            <summary>
            The SubViews element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.PaginationOptions">
            <summary>
            The PaginationOptions element from XML. Indicates how the pagination should behave.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView._Buttons">
            <summary>
            The Buttons element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView._PaintOptions">
            <summary>
            The PaintOptions element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.CustomParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.ListView.EditModal">
            <summary>
            The EditModalID modal object.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.SetCurrentPage(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,System.Int32,Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions)">
            <summary>
            Set the ListView contents to the current page.
            </summary>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="currentPage">Current page should be displayed. By default is "1".</param>
            <param name="searchOptions">If applyng search, otherwise null.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.SetCurrentPage``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,System.Int32,Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions)">
            <summary>
            Set the ListView contents to the current page.
            </summary>
            <typeparam name="T">The type of the ListView.</typeparam>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="currentPage">Current page should be displayed. By default is "1".</param>
            <param name="searchOptions">If applyng search, otherwise null.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.SetItemsCollection(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,System.Object,System.String)">
            <summary>
            Set the ListView contents to the value of an entity.
            </summary>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="entity">The entity that has the collection.</param>
            <param name="collection">The collection name.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.SetItemsCollection(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,System.Collections.IEnumerable)">
            <summary>
            Set the ListView contents to the value of an Enumerable.
            </summary>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="collection">The collection Enumerable value.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.SetItemsCollection``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Set the ListView contents to the value of an Enumerable.
            </summary>
            <typeparam name="T">The type of the Enumerable.</typeparam>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="collection">The collection Enumerable value.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.GetItemsCount(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext)">
            <summary>
            Get the ListView items Count().
            </summary>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <returns>Returns the Count() of items as integer.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.GetItemsCount``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext)">
            <summary>
            Get the ListView items Count().
            </summary>
            /// <typeparam name="T">The type of the ListView.</typeparam>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <returns>Returns the Count() of items as integer.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.GetSubView(System.String)">
            <summary>
            Retrieves a SubView using the SubView Id.
            </summary>
            <param name="Id">The Id of the SubView.</param>
            <returns>If found, return the SubView instance; Otherwise, return null.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.GetApplicableBackColor(Zambon.Core.Module.Services.ExpressionsService,System.Object)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.GetApplicableForeColor(Zambon.Core.Module.Services.ExpressionsService,System.Object)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.ListView.GetApplicableCssClass(Zambon.Core.Module.Services.ExpressionsService,System.Object)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.LookupView">
            <summary>
            Represents a node <LookupView></LookupView> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.LookupView.PostBackOptions">
            <summary>
            The postback options the LookUpView should use when submitting back to the parent view.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.LookupView.PopulateView(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions)">
            <summary>
            Set the LookUpView contents items.
            </summary>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="searchOptions">If applyng search, otherwise null.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.LookupView.PopulateView``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions)">
            <summary>
            Set the LookUpView contents items.
            </summary>
            <typeparam name="T">The type of the LookUpView.</typeparam>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="searchOptions">If applyng search, otherwise null.</param>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.LookupView.SetPostBackOptions(Zambon.Core.Module.Xml.Views.SubViews.PostBackOptions)">
            <summary>
            Set the value of the PostBackOptions property.
            </summary>
            <param name="postBackOptions">The PostBackOptions object.</param>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions">
            <summary>
            Represents a node <PaginationOptions></PaginationOptions> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.IntPageSize">
            <summary>
            The PageSize attribute from XML. The maximum number of records to display in a same page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.PageSize">
            <summary>
            The PageSize attribute from XML. The maximum number of records to display in a same page.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.IntPagesToShow">
            <summary>
            The PagesToShow attribute from XML. The maximum number of pages to show in footer.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.PagesToShow">
            <summary>
            The PagesToShow attribute from XML. The maximum number of pages to show in footer.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.ActualPage">
            <summary>
            The actual page being displayed in view.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.TotalPages">
            <summary>
            The total amount of pages.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.StartPage">
            <summary>
            The start page begin displayed in pages footer.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.EndPage">
            <summary>
            The last page begin displayed in pages footer.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.TotalRecords">
            <summary>
            The total amount of records available in view.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.PaginationOptions.ChangePage(System.Int32,System.Int32)">
            <summary>
            Changes the page to the informed page and recalculates start and end pages.
            </summary>
            <param name="newPage">The new page to set the view.</param>
            <param name="totalRecords">The total amount of records.</param>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption">
            <summary>
            Represents a node <PaintOption /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption.Id">
            <summary>
            The Id attribute from XML. The identification of this rule used when merging.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption.BackColor">
            <summary>
            The BackColor attribute from XML. The back color name to paint the row when the Condition is true.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption.ForeColor">
            <summary>
            The ForeColor attribute from XML. The fore color name to paint the row when the Condition is true.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption.CssClass">
            <summary>
            The CssClass attribute from XML. The css class name to use in row when the Condition is true.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption.Condition">
            <summary>
            The Condition attribute from XML. Condition to determine when use or not this rule.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOption.ConditionArguments">
            <summary>
            The ConditionArguments attribute from XML. Condition arguments to determine when use or not this rule, should be separated by ",".
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOptionsArray">
            <summary>
            Represents a node <PaintOptions></PaintOptions> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Paint.PaintOptionsArray.PaintOption">
            <summary>
            Represent elements <PaintOption /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions">
            <summary>
            Represents a search instance used by ListViews/LookUpViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchProperty">
            <summary>
            The property to search for.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchType">
            <summary>
            Text (Default)
            Number
            NumberRange
            DateTime
            DateTimeRange
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.ComparisonType">
            <summary>
            Contains (Default)
            Equal
            GreatherThan
            LowerThan
            GreatherOrEqual
            LowerOrEqual
            StartsWith
            EndsWith
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchText">
            <summary>
            When the property is a string, the text to search for.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchNumber1">
            <summary>
            When the property is an integer, the number to search for, when ranged search the beginning number.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchNumber2">
            <summary>
            When the property is an integer, the number to search for, when ranged search the ending number
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchDateTime1">
            <summary>
            When the property is a date/time, the date to search for, when ranged search the beginning date.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchDateTime2">
            <summary>
            When the property is a date/time, the date to search for, when ranged search the ending date.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.HasSearch">
            <summary>
            Checks if were informed in any search type.
            </summary>
            <returns>Returns true when should execute the search.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions.SearchList``1(System.Linq.IQueryable{``0})">
            <summary>
            Executes the search in a IQueryable list.
            </summary>
            <typeparam name="T">The list element type.</typeparam>
            <param name="list">The IQueryable list.</param>
            <returns>Returns the IQueryable list already searched.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchPropertiesArray">
            <summary>
            Represents a node <SearchProperties></SearchProperties> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchPropertiesArray.SearchProperty">
            <summary>
            Represent elements <SearchProperty /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty">
            <summary>
            Represents a node <SearchProperty /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.PropertyName">
            <summary>
            The PropertyName attribute from XML. The property name to use when executing the search.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.DisplayName">
            <summary>
            The DisplayName attribute from XML. The display name in selection field, by default will use the display name from the property model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.IntIndex">
            <summary>
            The Index attribute from XML. The index value returned from Xml file.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.Index">
            <summary>
            The Index attribute from XML. The column index order to display.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.Type">
            <summary>
            The Type attribute from XML. The type of search should be executed.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.Comparison">
            <summary>
            The Comparison attribute from XML. The comparison type of search should be executed.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.DefaultValue">
            <summary>
            The DefaultValue attribute from XML. If should use a default value when selecting this search option.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.ListViews.Search.SearchProperty.CompareTo(System.Object)">
            <summary>
            Compares the Index with other SearchProperty object, to sort the SearchProperties array.
            </summary>
            <param name="obj">The SearchProperty object to compare to.</param>
            <returns>A signed number indicating the relative values of this instance and value. Return
                Value Description Less than zero: This instance is less than value. Zero: This
                instance is equal to value. Greater than zero: This instance is greater than value.
            </returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.BaseModal">
            <summary>
            Base class used for ModalViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.BaseModal.Title">
            <summary>
            Text to show in the modal title.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.BaseModal.Level">
            <summary>
            Current level of the modal, automatically calculated when generating the pages.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.BaseSubView">
            <summary>
            Base class used for SubViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.BaseSubView.Id">
            <summary>
            The SubView Id, used to merge same elements across ApplicationModels.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.BaseSubView.ViewId">
            <summary>
            The ViewId this SubView should show, must exist.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.BaseSubView.ParentViewId">
            <summary>
            The ViewId of the parent view. Automatically set from the application.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.BaseSubView.View">
            <summary>
            The View object from the ViewId property.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.DetailModal">
            <summary>
            Modal used to show DetailViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.DetailModal.DetailView">
            <summary>
            The DetailView object from the ViewId property.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.LookupModal">
            <summary>
            Represents a node <LookupModal /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.LookupModal.LookUpView">
            <summary>
            The LookUpView view object.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.PostBackOptions">
            <summary>
            Post back parameters informed when opening/submiting LookUpViews.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.PostBackOptions.PostbackActionName">
            <summary>
            The post back action name.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.PostBackOptions.PostbackFormId">
            <summary>
            The Id of the form where should be posted the information.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.SubListView">
            <summary>
            Represents a node <SubListView /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.SubListView.ScrollSize">
            <summary>
            The ScrollSize attribute from XML. Defines the size of the SubListView (sm - small, md - medium, lg - large).
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.SubListView.ListView">
            <summary>
            The ListView view object.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.SubViews.SubViews">
            <summary>
            Represents a node <SubViews></SubViews> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.SubViews.CurrentLevel">
            <summary>
            Internal property used to set the current level of modal views.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.SubViews.DetailViews">
            <summary>
            Represent elements <DetailView /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.SubViews.LookupViews">
            <summary>
            Represent elements <LookupView /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.SubViews.SubViews.SubListViews">
            <summary>
            Represent elements <SubListView /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.BaseListView">
            <summary>
            Represents base properties for nodes of <DetailView></DetailView> or <ListView></ListView> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.Criteria">
            <summary>
            The Criteria attribute from XML. Criteria to use when displaying the records, can reference arguments by @0, @1, etc.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.CriteriaArguments">
            <summary>
            The CriteriaArguments attribute from XML. Criteria arguments to use when displaying the records, should be separated by ",".
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.FromSql">
            <summary>
            The FromSql attribute from XML. Custom SQL command to execute when returning the objects.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.Sort">
            <summary>
            The Sort attribute from XML. Sort condition to apply to object, separate properties by using ",". If needed to show descent add DESC. Ex: ID desc, Name desc.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.SearchProperties">
            <summary>
            List all search properties should be possible to search.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.Columns">
            <summary>
            List all columns.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView._SearchProperties">
            <summary>
            The PaginationOptions element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView._Columns">
            <summary>
            The Columns element from XML.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.SearchOptions">
            <summary>
            The active search options.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.BaseListView.ItemsCollection">
            <summary>
            The active list of items being displayed in this list view. Only availble when listing the items in page.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseListView.GetPopulatedView``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext,Zambon.Core.Module.Xml.Views.ListViews.Search.SearchOptions)">
            <summary>
            Return the base list view contents.
            </summary>
            <typeparam name="T">The type of the ListView.</typeparam>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <param name="searchOptions">If applyng search, otherwise null.</param>
            <returns>Returns the IQueryable list.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseListView.GetCellValue(Zambon.Core.Module.Services.ApplicationService,System.String)">
            <summary>
            Get the value of a property.
            </summary>
            <param name="app">The application service.</param>
            <param name="propertyName">The property name.</param>
            <returns>Returns the property value.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseListView.GetCellValue(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Module.Xml.Views.ListViews.Columns.Column)">
            <summary>
            Get the value of a column.
            </summary>
            <param name="app">The application service.</param>
            <param name="column">The column to get the value.</param>
            <returns>Returns the column value.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseListView.GetCellValue``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Module.Xml.Views.ListViews.Columns.Column,System.String)">
            <summary>
            Get the value of a column.
            </summary>
            <typeparam name="T">The type of the ListView.</typeparam>
            <param name="app">The application service.</param>
            <param name="column">The column to get the value.</param>
            <param name="customProperty">If the column references a sub property should pass in this parameter the sub property name.</param>
            <returns>Returns the column value.</returns>
        </member>
        <member name="M:Zambon.Core.Module.Xml.Views.BaseListView.GetItemsList``1(Zambon.Core.Module.Services.ApplicationService,Zambon.Core.Database.CoreDbContext)">
            <summary>
            Return the base list view contents.
            </summary>
            <typeparam name="T">The type of the ListView.</typeparam>
            <param name="app">The application service.</param>
            <param name="ctx">The CoreDbContext service.</param>
            <returns>Returns the IQueryable list.</returns>
        </member>
        <member name="T:Zambon.Core.Module.Xml.Views.Views">
            <summary>
            Represents a node <Views></Views> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Views.ListViews">
            <summary>
            Represent elements <ListView /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Views.DetailViews">
            <summary>
            Represent elements <DetailView /> from XML Application Model.
            </summary>
        </member>
        <member name="P:Zambon.Core.Module.Xml.Views.Views.LookupViews">
            <summary>
            Represent elements <LookupView /> from XML Application Model.
            </summary>
        </member>
        <member name="T:Zambon.Core.Module.Xml.XmlNode">
            <summary>
            Base class used for all Xml nodes from Application Model.
            </summary>
        </member>
        <member name="M:Zambon.Core.Module.Xml.XmlNode.Clone">
            <summary>
            Returns a new instance of the same object.
            </summary>
            <returns>Returns a new instance of the same object with the same values.</returns>
        </member>
    </members>
</doc>
